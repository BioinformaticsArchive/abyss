2009-06-18  Shaun Jackman  <sjackman@bcgsc.ca>

	* Release version 1.0.10.

	abyss-pe:
	* Start an MPI ABySS assembly if the np option is specified.

	ABYSS:
	* For a non-parallel assembly, allocate more hash buckets to allow
	for large single-machine jobs.
	* Print the hash load during the loading process.

	KAligner:
	* Output the IDs of reads that do not align.
	* Print a progress report of the number of reads aligned.

	ParseAligns:
	* To reduce memory usage, do not track reads that did not align.
	KAligner and ParseAligns should now be able to handle any amount
	of data in a single run.

	MergePaths:
	* Number paired-end contigs so that their IDs do not overlap with
	the single-end contigs. If a single-end contig is not used in a
	paired-end contig, its ID will not change.
	* Merge overlapping paired-end contigs that were previously
	being missed in some situations.

2009-05-15  Shaun Jackman  <sjackman@bcgsc.ca>

	* Release version 1.0.9.

	abyss-pe:
	* Allow multiple input files specified by the parameter `in'.
	* Support reading FASTA or FASTQ file formats.

	KAligner:
	* Support using Google sparsehash to reduce memory usage.
	Google sparsehash does not provide a multimap, so KAligner built
	using Google sparsehash cannot handle a duplicate k-mer in the
	reference sequence. It will print an error message and die if a
	duplicate k-mer is encountered. If Google sparsehash is not used,
	the standard STL multimap will be used which does permit duplicate
	k-mer.
	* Support reading the query sequence from standard input.

	ParseAligns:
	* Significantly reduce memory usage if the mate reads are
	encountered one after the next in the same file.

2009-04-02  Shaun Jackman  <sjackman@bcgsc.ca>

	* Release version 1.0.8.
	* Bug fix. Fix the undefined behaviour causing the error
	Assertion `marked == split' failed.

2009-03-31  Shaun Jackman  <sjackman@bcgsc.ca>

	* Release version 1.0.7.
	* Use a mark-and-sweep trimming algorithm to remove errors at the
	ends of blunt contigs.
	* The parallel (ABYSS-P) trimming algorithm is now deterministic;
	it will produce the same result every time. In addition, the
	result of the parallel trimming algorithm is identical to the
	result of the non-parallel trimming algorithm.
	* Start trimming branches at length 1, previously 2.
	* Bug fix in ABYSS-P. Repeat sequences of k-1 bases could
	potentially be misassembled. Use a mark-and-sweep algorithm to
	split ambiguous edges before contig generation. The previous
	algorithm was not deterministic.
	* Reduce memory usage by 200 MB by removing the MPI transmit
	buffer.
	* Bug fix in ABYSS-P. Fix an additional race condition in the
	erosion algorithm.

2009-03-24  Shaun Jackman  <sjackman@bcgsc.ca>

	* Release version 1.0.6.
	* Bug fix. Fix a race condition in the erosion algorithm.
	* For the parallel program (ABYSS-P), after bubble popping perform
	as many trimming rounds as necessary to remove all the tips, as
	the non-parallel program does.
	* New script, abyss2afg, to create an AMOS AFG assembly.

2009-03-11  Shaun Jackman  <sjackman@bcgsc.ca>

	* Release version 1.0.5.
	* Portability fixes. Tested with g++ 4.3.3.

2009-03-04  Shaun Jackman  <sjackman@bcgsc.ca>

	* Release version 1.0.4.

	ABYSS:
	* Remove the need to specify a -e,--erode parameter by improving
	the erosion algorithm to complete in a single pass.
	* Remove the default limit on the maximum number of bubble
	popping rounds. A limit may be specified using -b,--bubbles.
	* Generate a warning if an input file is empty, but do not die.
	* When using a Google sparsehash, allocate room for 100 million
	k-mers.
	* Increase the maximum FASTA line length from 64 kB to 256 kB.
	* Require only one of either -l,--read-length or -t,--trim-length
	to be specified.
	* Allow read pairs to be named `_forward' and `_reverse'.
	* Ensure that exactly k-1 bases of context is given on each side
	of the bubble sequence. Previously, one side would have k bases of
	context, and the other side would have k-1 bases.
	* Add command line options to each of the paired-end programs.

	ABYSS-P:
	* Use Open MPI as the default MPI library.
	* Do not link against the Open MPI C++ library.

	abyss-pe:
	* Use pipes where possible to avoid intermediate files.
	* The semantics of the n argument have changed. See DistanceEst
	-n,--npairs below.

	SimpleGraph:
	* If more than one path is found but only one meets all of the
	constraints, use it.
	* Allow for some constant error in distance estimates that does
	not decrease with the number of samples. The expected fragment
	size seems to vary with genomic coordinate to a certain degree.
	So, the distribution of fragment size spanning two given contigs
	may differ from the empirical distribution by a roughly constant
	offset.

	DistanceEst:
	* The semantics of the -n,--npairs option has changed.
	Require at least NPAIRS pairs between contigs (>= NPAIRS).
	Previously, required strictly more than NPAIRS pairs between
	contigs (> NPAIRS).
	* Give the estimated error to a single decimal place.
	* When counting the number of pairs that join two contigs, only
	count pairs that fit the empirical distribution.
	* When deciding whether the pairs joining two contigs are
	inconsistent in sense, require NPAIRS read pairs joining two
	contigs in each sense before considering the pair data to be
	inconsistent.

	ParseAligns:
	* Measure fragments in total size, not alignment distance.
	* Allow a read that spans two contigs to be used in distance
	estimates.
	* Add the -h,--hist option to produce a histogram.
	* Bug fix. When measuring the empirical fragment size, ensure that
	the sense of the alignments is correct. Output a negative fragment
	size if the reverse read aligns ahead of the forward read.
	* Bug fix. Miscalculated the fragment size estimate between two
	contigs if they did not have the same sense and one contig
	required flipping. It was possible to see one distance estimate
	from contig A to contig B and a differing estimate from contig B
	to contig A. Typically, the distance estimate would be off by
	one.

2009-01-23  Shaun Jackman  <sjackman@bcgsc.ca>

	* Release version 1.0.3.
	* Merge contigs that ended due to a lack of coverage, but which
	are connected by paired-end reads and overlap unambiguously.
	* Track the multiplicity the sense and antisense strand
	separately. Erode the end of a blunt contig until it is
	represented by both strands.
	* Ignore the case of the nucleotide sequence of a FASTA file.
	* Increase the maximum FASTA line length from 1 kB to 64 kB to
	allow loading contigs.
	* Output the path through the single-end contigs in the comment
	field of the paired-end contig.
	* In the paired-end driver script, abyss-pe,
	Implement a coverage cutoff, c.
	Pass the erosion parameter, e, to the single-end assembler.

2008-11-21  Shaun Jackman  <sjackman@bcgsc.ca>

	* Release version 1.0.2.
	* Terminate contig extension at palindromic k-mers.
	* If erosion (-e,--erode) is enabled, remove the tips of blunt
	contigs that are represented only once.

2008-11-07  Shaun Jackman  <sjackman@bcgsc.ca>

	* Release version 1.0.1.
	* Portability improvements to compile for Mac OS X.

2008-08-07  Shaun Jackman  <sjackman@bcgsc.ca>

	* Release version 1.0.
