#!/usr/bin/make -Rf
# Run the ABySS paired-end assembler.
# Written by Shaun Jackman <sjackman@bcgsc.ca>.

# Integrate with Sun Grid Engine (SGE)
ifdef JOB_NAME
name?=$(JOB_NAME)
endif
ifdef SGE_TASK_ID
k?=$(SGE_TASK_ID)
endif
ifdef NSLOTS
ifneq ($(NSLOTS), 1)
np?=$(NSLOTS)
endif
endif

mpirun?=$(shell which mpirun)

path?=$(shell if ! which ABYSS >/dev/null 2>/dev/null; then \
	dirname $(MAKEFILE_LIST); fi)
ifdef path
PATH:=$(path):$(PATH)
endif

ifdef name
out?=$(name)-contigs.fa
endif
ifdef out
name?=$(out:-contigs.fa=)
endif
ifndef name
$(error missing argument name)
endif

ifdef lib
map=$(foreach a,$(2),$(call $(1),$(a)))
deref=$($1)
in?=$(call map, deref, $(lib))
else
lib?=$(name)
$(lib)?=$(in)
endif

ifdef in
override in:=$(strip $(in))
endif
ifdef se
override se:=$(strip $(se))
endif

# Mandatory parameters
ifeq ($(in)$(se),)
$(error missing argument in, lib or se)
endif
ifndef k
$(error missing argument k)
endif
ifndef n
$(error missing argument n)
endif

# ABYSS parameters
q ?= 3
abyssopt += -k$k -q$q
ifdef l
$(error argument l is deprecated)
endif
ifdef e
abyssopt += -e$e
endif
ifdef E
abyssopt += -E$E
endif
ifdef t
abyssopt += -t$t
endif
ifdef c
abyssopt += -c$c
endif
ifdef b
abyssopt += -b$b
pbopt += -b$b
endif
abyssopt += $v --coverage-hist=coverage.hist -s $*-bubbles.fa

# Common paired-end parameters
ifdef PE_HOSTFILE
hostname?=$(shell hostname -f)
j?=$(shell awk '$$1 == "$(hostname)" {print $$2}' $(PE_HOSTFILE))
endif
ifdef np
j?=$(np)
endif
j?=2

# AdjList parameters
m?=30

# PopBubbles parameters
p?=0.9
pbopt += -p$p

# KAligner parameters.
kaopt=-i

# DistanceEst parameters
s?=100
$(foreach i,$(lib),$(eval $i_s?=$s))
$(foreach i,$(lib),$(eval $i_n?=$n))

# PathConsensus parameters
ifdef a
pcopt += -a$a
endif
pcopt += -p$p

# Remove environment variables.
unexport in se $(lib)

ifdef in
default: pe-contigs pe-dot
else
default: se-contigs se-dot
endif

se-contigs: $(name)-se-contigs.fa

se-sam: $(addsuffix -3.sam.gz, $(lib))

se-bam: $(addsuffix -3.bam.bai, $(lib))

se-dot: $(name)-3.dot

pe-contigs: $(out)

pe-dot: $(name)-contigs.dot

all: se-bam default

clean:
	rm -f *.adj *.sam.gz *.hist *.dist *.path *.path1 *.path2 *.path3

.PHONY: all clean default pe-contigs pe-dot se-bam se-sam se-contigs se-dot
.DELETE_ON_ERROR:
.SECONDARY:

# Utilities

%.bam: %.sam.gz
	samtools view -Sb $< -o $@

%.bam.bai: %.bam
	samtools index $<

# Single-end assembly

%-1.fa:
ifdef np
	$(mpirun) -np $(np) ABYSS-P $(abyssopt) $(ABYSS_OPTIONS) -o $@ $(in) $(se)
else
	ABYSS $(abyssopt) $(ABYSS_OPTIONS) -o $@ $(in) $(se)
endif

%-1.adj: %-1.fa
	AdjList $v -k$k -m$m $< >$@

# Pop bubbles.

%-1.path %-3.adj: %-1.fa %-1.adj
	PopBubbles $v -k$k $(pbopt) $(POPBUBBLES_OPTIONS) -g $*-3.adj $^ >$*-1.path

%-3.fa: %-1.fa %-1.adj %-1.path
	MergeContigs -k$k -o $@ $^
	awk '!/^>/ {x[">" $$1]=1; next} {getline s} $$1 in x {print $$0 "\n" s}' \
		$*-1.path $*-1.fa >$*-indel.fa

%-se-contigs.fa: %-3.fa
	ln -sf $< $@

# Estimate distances between contigs

%-3.sam.gz %-3.hist: $(name)-3.fa
	KAligner $v $(kaopt) $(KALIGNER_OPTIONS) -j$j -k$k $(strip $($*)) $< \
		|ParseAligns $v -k$k -h $*-3.hist \
		|sort -snk3 -k4 \
		|gzip >$*-3.sam.gz

%-3.bam %-3.hist: $(name)-3.fa
	KAligner $v $(kaopt) $(KALIGNER_OPTIONS) -j$j -k$k $(strip $($*)) $< \
		|ParseAligns $v -k$k -h $*-3.hist \
		|sort -snk3 -k4 \
		|samtools view -Sb - -o $*-3.bam

%-3.dist: %-3.sam.gz %-3.hist
	gunzip -c $< \
	|DistanceEst $v -j$j -k$k -s$($*_s) -n$($*_n) -o $@ $*-3.hist

%-3.dist: %-3.bam %-3.hist
	samtools view -h $< \
	|DistanceEst $v -j$j -k$k -s$($*_s) -n$($*_n) -o $@ $*-3.hist

%-3.dist: $(name)-3.fa
	KAligner $v $(kaopt) $(KALIGNER_OPTIONS) -j$j -k$k $(strip $($*)) $< \
		|ParseAligns $v -k$k -h $*-3.hist \
		|sort -snk3 -k4 \
		|DistanceEst $v -j$j -k$k -s$($*_s) -n$($*_n) -o $@ $*-3.hist

dist=$(addsuffix -3.dist, $(lib))

ifneq ($(name)-3.dist, $(dist))
$(name)-3.dist: $(dist)
	abyss-joindist $^ >$@

$(name)-3.bam: $(addsuffix -3.bam, $(lib))
	samtools merge -r $@ $^
endif

# Find overlaps between contigs

%-4.fa %-4.adj: %-3.fa %-3.adj %-3.dist
	Overlap $v $(OVERLAP_OPTIONS) -k$k -g $*-4.adj -o $*-4.fa $^

# Paired-end assembly

%-4.path1: %-4.adj %-3.dist
	SimpleGraph $v $(SIMPLEGRAPH_OPTIONS) -j$j -k$k -o $@ $^

%-4.path2: %-4.adj %-4.path1
	MergePaths $v $(MERGEPATHS_OPTIONS) -j$j -k$k -o $@ $^

%-4.path3: %-4.adj %-4.path2
	PathOverlap --assemble $v -k$k $^ >$@

ifndef cs

%-5.path %-5.fa %-5.adj: %-3.fa %-4.fa %-4.adj %-4.path3
	cat $(wordlist 1, 2, $^) \
		|PathConsensus $v -k$k $(pcopt) -o $*-5.path -s $*-5.fa -g $*-5.adj - $(wordlist 3, 4, $^)

%-contigs.fa: %-3.fa %-4.fa %-5.fa %-5.adj %-5.path
	cat $(wordlist 1, 3, $^) |MergeContigs $v -k$k -o $@ - $(wordlist 4, 5, $^)

else

%-5.adj %-5.path: %-4.adj %-4.path3
	ln -sf $*-4.adj $*-5.adj
	ln -sf $*-4.path3 $*-5.path

%-cs.fa: %-3.fa %-4.fa %-4.adj %-4.path3
	cat $(wordlist 1, 2, $^) |MergeContigs $v -k$k -o $@ - $(wordlist 3, 4, $^)

%-contigs.fa: %-cs.fa
	KAligner $v --seq -m -j$j -k$k $(in) $(se) $< \
		|Consensus $v -o $@ $<

endif

%-3.dot: %-3.adj
	abyss-adjtodot $v -k$k $< >$@

%-contigs.dot: %-5.adj %-5.path
	PathOverlap --overlap $v --dot -k$k $^ >$@
