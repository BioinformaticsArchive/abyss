#!/bin/bash
set -eu -o pipefail

case $1 in
	--help)
		cat <<EOF
Usage: abyss-dida-wrapper [OPTION]... QUERY... TARGET

Options:

    --help      this help message
    -j          number of threads [1]
    -m          path of 'mpirun' executable [mpirun]
    -n          number of ranks in DIDA MPI job [3]
    --version   print version info and exit

Align the sequences of the files QUERY to those of the file
TARGET using dida-wrapper.
EOF
		exit
		;;
	--version)
		cat <<EOF
abyss-dida-wrapper (ABySS)
Written by Ben Vandervalk.
EOF
		dida-wrapper --version
		exit
		;;
esac

mpirun=mpirun
n=3
dida_cmd='dida-wrapper --no-clean --se'
while getopts :j:l:m:n:v: opt; do
	case $opt in
		j) dida_cmd="$dida_cmd -j$OPTARG";;
		l) ;;
		m) mpirun="$OPTARG";;
		n) n=$OPTARG;;
		v) ;;
		\?) echo >&2 "$(basename 0): invalid option: $OPTARG"; exit 1;;
	esac
done
shift $((OPTIND-1))

# dida-wrapper requires n >= 3

if [ $n -lt 3 ]; then
	n = 3
fi

# Add file arguments to dida command.  Convert all input file paths
# to absolute, since we change to a temp dir below

query=($(readlink -f "$@"))
target=${query[${#query[@]}-1]}
unset query[${#query[@]}-1]

# run DIDA in a temp dir, since it makes lots of files
# with fixed filenames

tmpdir=$(mktemp -d --tmpdir=.)
pushd $tmpdir >&2

ln -s "$target"
target_link="$(basename $target)"

dida_cmd_array=($mpirun -np $n /bin/bash -c \
	"$dida_cmd <(abyss-tofastq ${query[@]}) $target_link")
echo >&2 "${dida_cmd_array[@]}"
"${dida_cmd_array[@]}"

du=$(du -hsc * | tail -1 | awk '{print $1}')
echo >&2 "dida-wrapper job used $du temp disk space"
rm -f *

popd >&2
rmdir $tmpdir
