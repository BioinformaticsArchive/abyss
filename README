ABySS - assemble short reads into contigs

* Compiling ABySS

Compiling ABySS should be as easy as
./configure && make

To install ABySS in a specified directory
./configure --prefix=/opt/ABySS && make && sudo make install

If you wish to build the parallel assembler with MPI support,
MPI should be found in /usr/include and /usr/lib or its location
specified to configure:
./configure --with-mpi=/usr/lib/openmpi && make

ABySS should be built using Google sparsehash to reduce memory usage,
although it will build without. Google sparsehash should be found in
/usr/include or its location specified to configure:
./configure CPPFLAGS=-I/usr/local/include

The default maximum k-mer size is 64 and may be decreased to reduce
memory usage or increased at compile time:
./configure --enable-maxk=96 && make

To run ABySS, its binaries should be found in your PATH.

* Single-end assembly

Assemble short reads in a file named reads.fa into contigs in a
file named contigs.fa with the following command:

ABYSS -k25 -l42 reads.fa

where -l specifies the read length and -k is an appropriate k-mer
length. The only method to find the optimal value of k is to run
multiple trials and inspect the results. The following shell snippet
will assemble for every value of k from 20 to 40.

for k in {20..40}; do
	ABYSS -k$k -l42 reads.fa && mv contigs.fa contigs-k$k.fa
done

The maximum value for k is 64. This limit may be changed at compile
time using the --enable-maxk option of configure. It may be decreased
to 32 to decrease memory usage, which is particularly useful for large
parallel jobs, or increased to 96.

* Paired-end assembly

To assemble paired short reads in a file named reads.fa into contigs
in a file named paired-contigs.fa, run the command:

abyss-pe k=25 l=42 c=2 n=10 in='reads1.fa reads2.fa' lib=ecoli

where k and l are the k-mer length and read length as before.
c is the minimum average k-mer coverage of a contig and may be
disabled by setting c=0.
n is the minimum number of pairs needed to consider joining two
contigs. The optimal value for n must be found by trial.
in specifies the input files to read, which must be in either FASTA or
FASTQ format.
The assembled contigs will be stored in ${lib}-contigs.fa.

The suffix of the read identifier for a pair of reads must be one of
'1' and '2', or 'A' and 'B', or 'F' and 'R', or 'F3' and 'R3', or
'forward' and 'reverse'. The reads may be interleaved in the same file
or found in different files; however, interleaved mates will use less
memory.

abyss-pe is a driver script implemented as a Makefile and runs a
single-end assembly, as described above, and the following commands,
which must be found in your PATH:

ABYSS - the single-end assembler
AdjList - finds overlaps of length k-1 between contigs
KAligner - aligns reads to contigs
ParseAligns - finds pairs of reads in alignments
DistanceEst - estimates distances between contigs
Overlap - find overlaps between blunt contigs
SimpleGraph - finds paths between pairs of contigs
MergePaths - merges consistent paths

* Notes

The distribution of fragment sizes is calculated empirically by
aligning paired reads to the contigs produced by the single-end
assembler, and the distribution is stored in a file with the extension
.hist, such as reads.hist.

* See also

Try `abyss --help' for more information on command line options, or
see the manual page in the file `ABYSS.1'.

Written by Jared Simpson and Shaun Jackman.
Subscribe to the users' mailing list at
http://www.bcgsc.ca/mailman/listinfo/abyss-users
Contact the users' mailing list at <abyss-users@bcgsc.ca>
or the authors directly at <abyss@bcgsc.ca>.
